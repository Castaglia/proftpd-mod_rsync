
Environment variables to set:

  RSYNC_MODULE_NAME
  RSYNC_MODULE_PATH
  RSYNC_HOST_ADDR (client IP addr)
  RSYNC_HOST_NAME (client DNS name)
  RSYNC_USER_NAME (empty if anonymous)
  RSYNC_PID (unique transfer number)
  RSYNC_REQUEST
  RSYNC_ARG#

Will need to link with libcrypto (OpenSSL) in order to get MD4 hash algos,
if we are doing authentication ourselves.  Whee.  (Maybe only support
anon rsync, or auth'd rsync over ssh.  No auth'd rsync over non-ssh?)

Will need to link to libpopt, in order to provide feature parity with
the rsync command-line options.

Get libpopt from:

  http://rpm5.org/files/popt/

Get librsync from:

  https://github.com/librsync/librsync

Note that in librsync-1.0.1, they switched from Autoconf to CMake.  Ick.

  http://www.mail-archive.com/psst@net.lut.ac.uk/msg00715.html

To handle rsync-over-ssh, mod_rsync would need to see if mod_sftp is
present/loaded _at startup_.  If so, need to register an 'exec' channel
handler/listener with mod_sftp, to handle the exec requests for executing
rsync.  This, I think, will be the most common usage, so focus on this
(rather than on the daemon protocol).

The librsync library can help with some of this, I think...

  rsync-<version>/csprotocol.txt is helpful

Should mod_rsync support rsync over SSL/TLS, in addition to SSH?  (Does anyone
even use rsync over SSL/TLS? Answer: Yes -- see rsync+stunnel link.)

Maybe only start by supporting protocol version 30, and adding support for
older versions as needed?

Links:

  http://en.wikipedia.org/wiki/Rsync#Algorithm
  http://samba.org/~tridge/phd_thesis.pdf
  http://rsync.samba.org/tech_report/ 
  http://rsync.samba.org/how-rsync-works.html
    Useful discussion of the generator, sender, receiver roles, and of
    why the file list is transmitted as it is.

  http://tutorials.jenkov.com/rsync/index.html
  http://tutorials.jenkov.com/rsync/network-protocol.html
    Interesting trick about keeping around rolling checksum and hash values
    for local files around, especially if you know your local server will
    be the source of files (e.g. it is an active mirroring source).

  http://rsync.samba.org/FAQ.html
    See especially the FAQs about memory usage, out of memory, and the
    newer incremental modes.

    The FAQ on "recopies the same files" is of relevance to mod_rewrite
    users, as changing the filename can lead to that sort of recopying
    unexpectedly.

  http://fixunix.com/tools/520822-memory-usage-rsync-3-0-3-how-much-ram-should-i-have-totransfer-13-million-files.html
    How much memory is needed for LARGE file lists, even with incremental
    mode.  (Also points out the need to explicitly NOT support options which
    would prevent the use of incremental mode.)

  https://tools.ietf.org/html/rfc5781
    The rsync URI Scheme

Related:

  https://librsync.sourcefrog.net/
    librsync

  http://serverfault.com/questions/224796/does-librsync-really-reduce-bandwidth-for-amazon-s3

  http://www.netbits.us/docs/stunnel_rsync.html 
    rsync over SSL

  http://opencoder.net/new-protocol.html

  https://www.csync.org/
